#!/bin/zsh

# The lsund base packages for arch linux
# This script goes through each of these, checks if they exist in the
# official repositories, if they exist on the local computer and installs
# accordingly.
#
# Dependencies: zsh, pacaur

LOCAL_BIN=$HOME/.local/bin
NEOVIM_INIT=$HOME/.config/nvim/init.vim
mkdir -p $HOME/.config/nvim
mkdir -p $LOCAL_BIN

pacman -Q pacaur

if [[ $? == "1" ]]; then
  echo "Need pacaur installed"
  exit 1
fi

pacman -Q zsh

if [[ $? == "1" ]]; then
  echo "Need zsh installed"
  exit 1
fi

sudo pacman -Suy

declare -a packages=(
                     "xorg-server"
                     # "xorg"
                     # "xorg-apps"
                     "wpa_supplicant"
                     "dialog"
                     "netctl"
                     "xsel"
                     "rsync"
                     "gtest"
                     "gmock"
                     "cmatrix"
                     "fakeroot"
                     "meson"
                     "perl"
                     "nlohmann-json"
                     "fmt"
                     "patch"
                     "yarn"
                     "npm"
                     "pkg-config"
                     "dos2unix"
                     "lsb-release"
                     "lsof"
                     "autorandr"
                     "postgresql"
                     "docker"
                     "docker-compose"
                     "cronie"
                     "htop"
                     "git"
                     "git-delta"
                     "ghc"
                     "ghc-static"
                     "exa"
                     "task"
                     "youtube-dl"
                     "xscreensaver"
                     "jdk11-openjdk"
                     "cabal-install"
                     "texlive-fontsextra"
                     "texlive-core"
                     "texlive-bin"
                     # "texlive-lang"
                     "fzf"
                     "net-tools"
                     "dzen2"
                     "pulseaudio"
                     "pulseaudio-alsa"
                     "pavucontrol"
                     "alsa-utils"
                     "mplayer"
                     "wget"
                     "rxvt-unicode"
                     "rxvt-unicode-terminfo"
                     "xmonad"
                     "xmonad-contrib"
                     "ttf-font-awesome"
                     "ttf-indic-otf"
                     "ttf-dejavu"
                     "sdl2_ttf"
                     "ttf-liberation"
                     "ttf-droid"
                     "firefox"
                     "thunderbird"
                     "unzip"
                     "tmux"
                     "openssh"
                     "scrot"
                     "feh"
                     "vim"
                     "graphviz"
                     "ripgrep"
                     "the_silver_searcher"
                     "pwgen"
                     "fd"
                     "cmake"
                     "python2"
                     "python-virtualenv"
                     "python-requests"
                     "python-regex"
                     "python-dateutil"
                     "pyalpm"
                     "python-feedparser"
                     "pydf"
                     "python-pip"
                     "python2-pip"
                     "expac"
                     "redshift"
                     "gimp"
                     "ristretto"
                     "tumbler"
                     "scrot"
                     "pass"
                     "jq"
                     "meson"
                     "gtest"
                     "gmock"
                     "curl"
                     "dbeaver"
                     "fortune-mod"
                     "cowsay"
                     "emacs"
                     "screenfetch"
                     "cronie"
                     "zathura"
                     "zathura-pdf-poppler")

all_packages=""
for package in "${packages[@]}"
do
    pacaur -Q $package > /dev/null
    if [[ $? == "0" ]]; then
        echo "$package already installed"
    else
        echo "\n==> Queueing $package for install\n"
        all_packages="$all_packages $package"
    fi
done

if [[ $all_packages != "" ]]; then
    echo "Installing packages"
    pacaur -S $(echo "$all_packages" | xargs)
else
    echo "No packages to install"
fi

## Pip installs
# Neovim
# install with python support
if [[ ! -e /usr/bin/nvim ]]; then
  sudo pip install neovim
else
  echo /usr/bin/nvim already installed
fi
if [[ ! -e $NEOVIM_INIT ]]; then
    touch $NEOVIM_INIT
    echo "set runtimepath^=~/.vim runtimepath+=~/.vim/after" > $NEOVIM_INIT
    echo "let &packpath = &runtimepath" >> $NEOVIM_INIT
    echo "source ~/.vimrc" >> $NEOVIM_INIT
  else
    echo "$NEOVIM_INIT already exists"
fi

if [[ ! -e /usr/bin/grip ]]; then
  sudo pip install grip
else
  echo "/usr/bin/grip already installed"
fi

# trans
which trans > /dev/null 2>&1
if [[ ! -e $LOCAL_BIN/trans ]]; then
    wget git.io/trans
    chmod +x ./trans
    mv trans $LOCAL_BIN
  else
    echo "$LOCAL_BIN/trans already installed"
fi

# lein
which lein > /dev/null 2>&1
if [[ ! -e $HOME/.local/bin/lein ]]; then
    wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
    chmod +x ./lein
    mv lein $LOCAL_BIN
  else
    echo "$LOCAL_BIN/lein already installed"
fi


# stack and pandoc
which stack > /dev/null 2>&1
if [[ ! -e /usr/local/bin/stack ]]; then
    curl -sSL https://get.haskellstack.org/ | sh
    mv stack $LOCAL_BIN
    stack update
  else
    echo "/usr/local/bin/stack already installed"
fi


if [[ ! -e $HOME/.oh-my-zsh ]]; then
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  else
    echo "$HOME/.oh-my-zsh already installed"
fi
